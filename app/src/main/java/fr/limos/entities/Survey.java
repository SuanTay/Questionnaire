package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Survey generated by hbm2java
 */
@Entity
@Table(name = "survey", catalog = "chu")
@NamedQuery(name="allsurvey", query="SELECT i FROM Survey i")
public class Survey implements java.io.Serializable {

	private Integer idSurvey;
	private Labelchu label;
	private Date startdate;
	private Date enddate;
	private int defaultfrequency;
	private String status;
	private Set<Section> sections = new HashSet(0);
	private Set<Result> results = new HashSet(0);
	private Set<Schedule> schedules = new HashSet(0);
	private Set<Investigate> investigates = new HashSet(0);

	public Survey() {
	}

	public Survey(Labelchu label, Date startdate, Date enddate, int defaultfrequency, String status) {
		this.label = label;
		this.startdate = startdate;
		this.enddate = enddate;
		this.defaultfrequency = defaultfrequency;
		this.status = status;
	}

	public Survey(Labelchu label, Date startdate, Date enddate, int defaultfrequency, String status, Set<Section> sections,
			Set<Result> results, Set<Schedule> schedules, Set<Investigate> investigates) {
		this.label = label;
		this.startdate = startdate;
		this.enddate = enddate;
		this.defaultfrequency = defaultfrequency;
		this.status = status;
		this.sections = sections;
		this.results = results;
		this.schedules = schedules;
		this.investigates = investigates;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_survey", unique = true, nullable = false)
	public Integer getIdSurvey() {
		return this.idSurvey;
	}

	public void setIdSurvey(Integer idSurvey) {
		this.idSurvey = idSurvey;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_label", nullable = false)
	public Labelchu getLabel() {
		return this.label;
	}

	public void setLabel(Labelchu label) {
		this.label = label;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "startdate", nullable = false, length = 10)
	public Date getStartdate() {
		return this.startdate;
	}

	public void setStartdate(Date startdate) {
		this.startdate = startdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "enddate", nullable = false, length = 10)
	public Date getEnddate() {
		return this.enddate;
	}

	public void setEnddate(Date enddate) {
		this.enddate = enddate;
	}

	@Column(name = "defaultfrequency", nullable = false)
	public int getDefaultfrequency() {
		return this.defaultfrequency;
	}

	public void setDefaultfrequency(int defaultfrequency) {
		this.defaultfrequency = defaultfrequency;
	}

	@Column(name = "status", nullable = false, length = 50)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "survey")
	public Set<Section> getSections() {
		return this.sections;
	}

	public void setSections(Set<Section> sections) {
		this.sections = sections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "survey")
	public Set<Result> getResults() {
		return this.results;
	}

	public void setResults(Set<Result> results) {
		this.results = results;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "survey")
	public Set<Schedule> getSchedules() {
		return this.schedules;
	}

	public void setSchedules(Set<Schedule> schedules) {
		this.schedules = schedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "survey")
	public Set<Investigate> getInvestigates() {
		return this.investigates;
	}

	public void setInvestigates(Set<Investigate> investigates) {
		this.investigates = investigates;
	}

}
