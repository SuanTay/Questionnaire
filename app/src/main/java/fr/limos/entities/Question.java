package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "question", catalog = "chu")
@NamedQuery(name="allquestion",query="SELECT i FROM Question i")
public class Question implements java.io.Serializable {

	private QuestionId id;
	private Labelchu label;
	private Normalsection normalsection;
	private int orderquestion;
	private Integer fkAnsweridAnswer;
	private int fkAnswerfkQuestionforagreidQuestionforagre;
	private int fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey;
	private int fkAnswerfkChoicefkNormalsectionidSection;
	private int fkAnswerfkChoiceidQuestion;
	private Simplequestion simplequestion;
	private Complexquestion complexquestion;

	public Question() {
	}

	public Question(QuestionId id, Labelchu label, Normalsection normalsection, int orderquestion,
			int fkAnswerfkQuestionforagreidQuestionforagre, int fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey,
			int fkAnswerfkChoicefkNormalsectionidSection, int fkAnswerfkChoiceidQuestion) {
		this.id = id;
		this.label = label;
		this.normalsection = normalsection;
		this.orderquestion = orderquestion;
		this.fkAnswerfkQuestionforagreidQuestionforagre = fkAnswerfkQuestionforagreidQuestionforagre;
		this.fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey = fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey;
		this.fkAnswerfkChoicefkNormalsectionidSection = fkAnswerfkChoicefkNormalsectionidSection;
		this.fkAnswerfkChoiceidQuestion = fkAnswerfkChoiceidQuestion;
	}

	public Question(QuestionId id, Labelchu label, Normalsection normalsection, int orderquestion,
			Integer fkAnsweridAnswer, int fkAnswerfkQuestionforagreidQuestionforagre,
			int fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey, int fkAnswerfkChoicefkNormalsectionidSection,
			int fkAnswerfkChoiceidQuestion, Simplequestion simplequestion, Complexquestion complexquestion) {
		this.id = id;
		this.label = label;
		this.normalsection = normalsection;
		this.orderquestion = orderquestion;
		this.fkAnsweridAnswer = fkAnsweridAnswer;
		this.fkAnswerfkQuestionforagreidQuestionforagre = fkAnswerfkQuestionforagreidQuestionforagre;
		this.fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey = fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey;
		this.fkAnswerfkChoicefkNormalsectionidSection = fkAnswerfkChoicefkNormalsectionidSection;
		this.fkAnswerfkChoiceidQuestion = fkAnswerfkChoiceidQuestion;
		this.simplequestion = simplequestion;
		this.complexquestion = complexquestion;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idQuestion", column = @Column(name = "id_question", nullable = false) ),
			@AttributeOverride(name = "fkIdSection", column = @Column(name = "fk_id_section", nullable = false) ),
			@AttributeOverride(name = "fkIdSurvey", column = @Column(name = "fk_id_survey", nullable = false) ) })
	public QuestionId getId() {
		return this.id;
	}

	public void setId(QuestionId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_label", nullable = false)
	public Labelchu getLabel() {
		return this.label;
	}

	public void setLabel(Labelchu label) {
		this.label = label;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "fk_id_section", referencedColumnName = "id_section", nullable = true, insertable = false, updatable = false),
			@JoinColumn(name = "fk_id_survey", referencedColumnName = "fk_id_survey", nullable = true, insertable = false, updatable = false) })
	public Normalsection getNormalsection() {
		return this.normalsection;
	}

	public void setNormalsection(Normalsection normalsection) {
		this.normalsection = normalsection;
	}

	@Column(name = "orderquestion", nullable = false)
	public int getOrderquestion() {
		return this.orderquestion;
	}

	public void setOrderquestion(int orderquestion) {
		this.orderquestion = orderquestion;
	}

	@Column(name = "fk_answerid_answer")
	public Integer getFkAnsweridAnswer() {
		return this.fkAnsweridAnswer;
	}

	public void setFkAnsweridAnswer(Integer fkAnsweridAnswer) {
		this.fkAnsweridAnswer = fkAnsweridAnswer;
	}

	@Column(name = "fk_answerfk_questionforagreid_questionforagre", nullable = false)
	public int getFkAnswerfkQuestionforagreidQuestionforagre() {
		return this.fkAnswerfkQuestionforagreidQuestionforagre;
	}

	public void setFkAnswerfkQuestionforagreidQuestionforagre(int fkAnswerfkQuestionforagreidQuestionforagre) {
		this.fkAnswerfkQuestionforagreidQuestionforagre = fkAnswerfkQuestionforagreidQuestionforagre;
	}

	@Column(name = "fk_answerfk_choicefk_normalsectionfk_surveyid_survey", nullable = false)
	public int getFkAnswerfkChoicefkNormalsectionfkSurveyidSurvey() {
		return this.fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey;
	}

	public void setFkAnswerfkChoicefkNormalsectionfkSurveyidSurvey(
			int fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey) {
		this.fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey = fkAnswerfkChoicefkNormalsectionfkSurveyidSurvey;
	}

	@Column(name = "fk_answerfk_choicefk_normalsectionid_section", nullable = false)
	public int getFkAnswerfkChoicefkNormalsectionidSection() {
		return this.fkAnswerfkChoicefkNormalsectionidSection;
	}

	public void setFkAnswerfkChoicefkNormalsectionidSection(int fkAnswerfkChoicefkNormalsectionidSection) {
		this.fkAnswerfkChoicefkNormalsectionidSection = fkAnswerfkChoicefkNormalsectionidSection;
	}

	@Column(name = "fk_answerfk_choiceid_question", nullable = false)
	public int getFkAnswerfkChoiceidQuestion() {
		return this.fkAnswerfkChoiceidQuestion;
	}

	public void setFkAnswerfkChoiceidQuestion(int fkAnswerfkChoiceidQuestion) {
		this.fkAnswerfkChoiceidQuestion = fkAnswerfkChoiceidQuestion;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "complexquestion")
	public Simplequestion getSimplequestion() {
		return this.simplequestion;
	}

	public void setSimplequestion(Simplequestion simplequestion) {
		this.simplequestion = simplequestion;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "question")
	public Complexquestion getComplexquestion() {
		return this.complexquestion;
	}

	public void setComplexquestion(Complexquestion complexquestion) {
		this.complexquestion = complexquestion;
	}

}
