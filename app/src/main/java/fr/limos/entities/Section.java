package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Section generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "section", catalog = "chu")
@NamedQuery(name="allsection", query="SELECT i FROM Section i")
public class Section implements java.io.Serializable {

	private SectionId id;
	private Labelchu label;
	private Survey survey;
	private Integer frenquency;
	private int ordersection;
	private Normalsection normalsection;
	private Agregatedsection agregatedsection;

	public Section() {
	}

	public Section(SectionId id, Labelchu label, Survey survey, int ordersection) {
		this.id = id;
		this.label = label;
		this.survey = survey;
		this.ordersection = ordersection;
	}

	public Section(SectionId id, Labelchu label, Survey survey, Integer frenquency, int ordersection,
			Normalsection normalsection, Agregatedsection agregatedsection) {
		this.id = id;
		this.label = label;
		this.survey = survey;
		this.frenquency = frenquency;
		this.ordersection = ordersection;
		this.normalsection = normalsection;
		this.agregatedsection = agregatedsection;
	}

	@EmbeddedId
	@GeneratedValue(strategy = IDENTITY)
	@AttributeOverrides({
			@AttributeOverride(name = "idSection", column = @Column(name = "id_section", nullable = false) ),
			@AttributeOverride(name = "fkIdSurvey", column = @Column(name = "fk_id_survey", nullable = false) ) })
	public SectionId getId() {
		return this.id;
	}

	public void setId(SectionId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_label", nullable = false)
	public Labelchu getLabel() {
		return this.label;
	}

	public void setLabel(Labelchu label) {
		this.label = label;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_survey", nullable = false, insertable = false, updatable = false)
	public Survey getSurvey() {
		return this.survey;
	}

	public void setSurvey(Survey survey) {
		this.survey = survey;
	}

	@Column(name = "frenquency")
	public Integer getFrenquency() {
		return this.frenquency;
	}

	public void setFrenquency(Integer frenquency) {
		this.frenquency = frenquency;
	}

	@Column(name = "ordersection", nullable = false)
	public int getOrdersection() {
		return this.ordersection;
	}

	public void setOrdersection(int ordersection) {
		this.ordersection = ordersection;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "section")
	public Normalsection getNormalsection() {
		return this.normalsection;
	}

	public void setNormalsection(Normalsection normalsection) {
		this.normalsection = normalsection;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "section")
	public Agregatedsection getAgregatedsection() {
		return this.agregatedsection;
	}

	public void setAgregatedsection(Agregatedsection agregatedsection) {
		this.agregatedsection = agregatedsection;
	}

}
