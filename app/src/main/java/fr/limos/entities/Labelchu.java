package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Label generated by hbm2java
 */
@Entity
@Table(name = "labelchu", catalog = "chu")
@NamedQuery(name="alllabelchu", query="SELECT i FROM Labelchu i")
public class Labelchu implements java.io.Serializable {

	private Integer idLabel;
	private String shortlabel;
	private String labelfr;
	private String labelen;
	private String commentfr;
	private String commenten;
	private String unitefr;
	private String uniteen;
	private Set<Ontolink> ontolinks = new HashSet(0);
	private Set<Question> questions = new HashSet(0);
	private Set<Survey> surveys = new HashSet(0);
	private Set<Answer> answers = new HashSet(0);
	private Set<Section> sections = new HashSet(0);
	private Set<Questionforagre> questionforagres = new HashSet(0);

	public Labelchu() {
	}

	public Labelchu(String shortlabel, String labelfr) {
		this.shortlabel = shortlabel;
		this.labelfr = labelfr;
	}

	public Labelchu(String shortlabel, String labelfr, String labelen, String commentfr, String commenten, String unitefr,
			String uniteen, Set<Ontolink> ontolinks,  Set<Question> questions, Set<Survey> surveys, Set<Answer> answers,  Set<Section> sections,
			Set<Questionforagre> questionforagres) {
		this.shortlabel = shortlabel;
		this.labelfr = labelfr;
		this.labelen = labelen;
		this.commentfr = commentfr;
		this.commenten = commenten;
		this.unitefr = unitefr;
		this.uniteen = uniteen;
		this.ontolinks = ontolinks;
		this.questions = questions;
		this.surveys = surveys;
		this.answers = answers;
		this.sections = sections;
		this.questionforagres = questionforagres;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_label", unique = true, nullable = false)
	public Integer getIdLabel() {
		return this.idLabel;
	}

	public void setIdLabel(Integer idLabel) {
		this.idLabel = idLabel;
	}

	@Column(name = "shortlabel", nullable = false, length = 50)
	public String getShortlabel() {
		return this.shortlabel;
	}

	public void setShortlabel(String shortlabel) {
		this.shortlabel = shortlabel;
	}

	@Column(name = "labelfr", nullable = false)
	public String getLabelfr() {
		return this.labelfr;
	}

	public void setLabelfr(String labelfr) {
		this.labelfr = labelfr;
	}

	@Column(name = "labelen")
	public String getLabelen() {
		return this.labelen;
	}

	public void setLabelen(String labelen) {
		this.labelen = labelen;
	}

	@Column(name = "commentfr", length = 500)
	public String getCommentfr() {
		return this.commentfr;
	}

	public void setCommentfr(String commentfr) {
		this.commentfr = commentfr;
	}

	@Column(name = "commenten", length = 500)
	public String getCommenten() {
		return this.commenten;
	}

	public void setCommenten(String commenten) {
		this.commenten = commenten;
	}

	@Column(name = "unitefr", length = 20)
	public String getUnitefr() {
		return this.unitefr;
	}

	public void setUnitefr(String unitefr) {
		this.unitefr = unitefr;
	}

	@Column(name = "uniteen", length = 20)
	public String getUniteen() {
		return this.uniteen;
	}

	public void setUniteen(String uniteen) {
		this.uniteen = uniteen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Ontolink> getOntolinks() {
		return this.ontolinks;
	}

	public void setOntolinks(Set<Ontolink> ontolinks) {
		this.ontolinks = ontolinks;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Survey> getSurveys() {
		return this.surveys;
	}

	public void setSurveys(Set<Survey> surveys) {
		this.surveys = surveys;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Section> getSections() {
		return this.sections;
	}

	public void setSections(Set<Section> sections) {
		this.sections = sections;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "label")
	public Set<Questionforagre> getQuestionforagres() {
		return this.questionforagres;
	}

	public void setQuestionforagres(Set<Questionforagre> questionforagres) {
		this.questionforagres = questionforagres;
	}

}
