package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Agregation generated by hbm2java
 */
@Entity
@Table(name = "agregation", catalog = "chu")
public class Agregation implements java.io.Serializable {

	private AgregationId id;
	private Agregatedsection agregatedsection;
	private Set<Questionforagre> questionforagres = new HashSet(0);

	public Agregation() {
	}

	public Agregation(AgregationId id, Agregatedsection agregatedsection) {
		this.id = id;
		this.agregatedsection = agregatedsection;
	}

	public Agregation(AgregationId id, Agregatedsection agregatedsection, Set<Questionforagre> questionforagres) {
		this.id = id;
		this.agregatedsection = agregatedsection;
		this.questionforagres = questionforagres;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idAgregation", column = @Column(name = "id_agregation") ),
			@AttributeOverride(name = "fkIdSection", column = @Column(name = "fk_id_section") ),
			@AttributeOverride(name = "fkIdSurvey", column = @Column(name = "fk_id_survey") ) })
	public AgregationId getId() {
		return this.id;
	}

	public void setId(AgregationId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "fk_id_section", referencedColumnName = "id_section",  insertable = false, updatable = false),
			@JoinColumn(name = "fk_id_survey", referencedColumnName = "fk_id_survey", insertable = false, updatable = false) })
	public Agregatedsection getAgregatedsection() {
		return this.agregatedsection;
	}

	public void setAgregatedsection(Agregatedsection agregatedsection) {
		this.agregatedsection = agregatedsection;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "agregation")
	public Set<Questionforagre> getQuestionforagres() {
		return this.questionforagres;
	}

	public void setQuestionforagres(Set<Questionforagre> questionforagres) {
		this.questionforagres = questionforagres;
	}

}
