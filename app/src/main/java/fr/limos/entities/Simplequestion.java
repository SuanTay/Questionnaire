package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

/**
 * Simplequestion generated by hbm2java
 */
@Entity
@Table(name = "simplequestion", catalog = "chu")
@NamedQuery(name="allsimplequestion",query ="SELECT i FROM Simplequestion i")
public class Simplequestion implements java.io.Serializable {

	private SimplequestionId id;
	private Complexquestion complexquestion;
	private Question question;
	private Integer fkComplexquestionfkNormalsectionfkSurveyidSurvey;
	private Integer fkComplexquestionfkNormalsectionidSection;
	private Integer fkComplexquestionidQuestion;
	private Choice choice;
	private Text text;
	private Ranking ranking;

	public Simplequestion() {
	}

	public Simplequestion(Complexquestion complexquestion, Question question) {
		this.complexquestion = complexquestion;
		this.question = question;
	}

	public Simplequestion(Complexquestion complexquestion, Question question,
			Integer fkComplexquestionfkNormalsectionfkSurveyidSurvey, Integer fkComplexquestionfkNormalsectionidSection,
			Integer fkComplexquestionidQuestion, Choice choice, Text text, Ranking ranking) {
		this.complexquestion = complexquestion;
		this.question = question;
		this.fkComplexquestionfkNormalsectionfkSurveyidSurvey = fkComplexquestionfkNormalsectionfkSurveyidSurvey;
		this.fkComplexquestionfkNormalsectionidSection = fkComplexquestionfkNormalsectionidSection;
		this.fkComplexquestionidQuestion = fkComplexquestionidQuestion;
		this.choice = choice;
		this.text = text;
		this.ranking = ranking;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "fkIdQuestion", column = @Column(name = "fk_id_question", nullable = false) ),
			@AttributeOverride(name = "fkIdSection", column = @Column(name = "fk_id_section", nullable = false) ),
			@AttributeOverride(name = "fkIdSurvey", column = @Column(name = "fk_id_survey", nullable = false) ) })
	public SimplequestionId getId() {
		return this.id;
	}

	public void setId(SimplequestionId id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Complexquestion getComplexquestion() {
		return this.complexquestion;
	}

	public void setComplexquestion(Complexquestion complexquestion) {
		this.complexquestion = complexquestion;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Question getQuestion() {
		return this.question;
	}

	public void setQuestion(Question question) {
		this.question = question;
	}

	@Column(name = "fk_complexquestionfk_normalsectionfk_surveyid_survey")
	public Integer getFkComplexquestionfkNormalsectionfkSurveyidSurvey() {
		return this.fkComplexquestionfkNormalsectionfkSurveyidSurvey;
	}

	public void setFkComplexquestionfkNormalsectionfkSurveyidSurvey(
			Integer fkComplexquestionfkNormalsectionfkSurveyidSurvey) {
		this.fkComplexquestionfkNormalsectionfkSurveyidSurvey = fkComplexquestionfkNormalsectionfkSurveyidSurvey;
	}

	@Column(name = "fk_complexquestionfk_normalsectionid_section")
	public Integer getFkComplexquestionfkNormalsectionidSection() {
		return this.fkComplexquestionfkNormalsectionidSection;
	}

	public void setFkComplexquestionfkNormalsectionidSection(Integer fkComplexquestionfkNormalsectionidSection) {
		this.fkComplexquestionfkNormalsectionidSection = fkComplexquestionfkNormalsectionidSection;
	}

	@Column(name = "fk_complexquestionid_question")
	public Integer getFkComplexquestionidQuestion() {
		return this.fkComplexquestionidQuestion;
	}

	public void setFkComplexquestionidQuestion(Integer fkComplexquestionidQuestion) {
		this.fkComplexquestionidQuestion = fkComplexquestionidQuestion;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "simplequestion")
	public Choice getChoice() {
		return this.choice;
	}

	public void setChoice(Choice choice) {
		this.choice = choice;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "simplequestion")
	public Text getText() {
		return this.text;
	}

	public void setText(Text text) {
		this.text = text;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "simplequestion")
	public Ranking getRanking() {
		return this.ranking;
	}

	public void setRanking(Ranking ranking) {
		this.ranking = ranking;
	}

}
