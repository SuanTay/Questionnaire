package fr.limos.entities;
// default package
// Generated 5 janv. 2016 13:26:43 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Answer generated by hbm2java
 */
@Entity
@Table(name = "answer", catalog = "chu")
@NamedQuery(name="allanswer",query="Select i from Answer i")
public class Answer implements java.io.Serializable {

	private AnswerId id;
	private Choice choice;
	private Labelchu label;
	private Questionforagre questionforagre;
	private int orderanswer;
	private Integer metricforagreg;

	public Answer() {
	}

	public Answer(AnswerId id, Choice choice, Labelchu label, int orderanswer) {
		this.id = id;
		this.choice = choice;
		this.label = label;
		this.orderanswer = orderanswer;
	}

	public Answer(AnswerId id, Choice choice, Labelchu label, Questionforagre questionforagre, int orderanswer,
			Integer metricforagreg) {
		this.id = id;
		this.choice = choice;
		this.label = label;
		this.questionforagre = questionforagre;
		this.orderanswer = orderanswer;
		this.metricforagreg = metricforagreg;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idAnswer", column = @Column(name = "id_answer", nullable = false) ),
			@AttributeOverride(name = "fkIdQuestion", column = @Column(name = "fk_id_question", nullable = false) ),
			@AttributeOverride(name = "fkIdSection", column = @Column(name = "fk_id_section", nullable = false) ),
			@AttributeOverride(name = "fkIdSurvey", column = @Column(name = "fk_id_survey", nullable = false) ) })
	public AnswerId getId() {
		return this.id;
	}

	public void setId(AnswerId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "fk_id_question", referencedColumnName = "fk_id_question", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "fk_id_section", referencedColumnName = "fk_id_section", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "fk_id_survey", referencedColumnName = "fk_id_survey", nullable = false, insertable = false, updatable = false) })
	public Choice getChoice() {
		return this.choice;
	}

	public void setChoice(Choice choice) {
		this.choice = choice;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_id_label", nullable = false)
	public Labelchu getLabel() {
		return this.label;
	}

	public void setLabel(Labelchu label) {
		this.label = label;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "fk_id_questionforagre", referencedColumnName = "id_questionforagre"),
			@JoinColumn(name = "fk_id_agregation", referencedColumnName = "fk_id_agregation") })
	public Questionforagre getQuestionforagre() {
		return this.questionforagre;
	}

	public void setQuestionforagre(Questionforagre questionforagre) {
		this.questionforagre = questionforagre;
	}

	@Column(name = "orderanswer", nullable = false)
	public int getOrderanswer() {
		return this.orderanswer;
	}

	public void setOrderanswer(int orderanswer) {
		this.orderanswer = orderanswer;
	}

	@Column(name = "metricforagreg")
	public Integer getMetricforagreg() {
		return this.metricforagreg;
	}

	public void setMetricforagreg(Integer metricforagreg) {
		this.metricforagreg = metricforagreg;
	}

}
